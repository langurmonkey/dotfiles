#!/usr/bin/env python3
# coding=utf-8

# Modified by tsagrista, from original source at
# https://github.com/Optixal/i3blocks-crypto
#
# This version needs the cryptocurrency as an argument:
# $  crypto ethereum
# $  crypto bitcoin
#
# Also, this script uses the open coincap.io API instead of CoinMarketCap.

import json
from lxml import etree
import requests
from requests import Request, Session
from requests.exceptions import ConnectionError, Timeout, TooManyRedirects
import os
import sys

def print_currency(data: list, rate: float):
    price = float(data['priceUsd'])
    price = price / rate

    if price > 100: precision = 0
    elif price > 0.1: precision = 2
    else: precision = 6

    percentChange = float(data['changePercent24Hr'])
    percentChangeFormat = '<span color="{}">{}{:.2f}%</span>'
    if percentChange > 0: percentChangeInfo = percentChangeFormat.format('#3BB92D', '⇧', percentChange)
    elif percentChange == 0: percentChangeInfo = percentChangeFormat.format('#CCCCCC', '', percentChange)
    else: percentChangeInfo = percentChangeFormat.format('#F7555E', '⇩', percentChange)

    sym = data['symbol']
    if sym == "BTC":
        sym = "₿"

    print(('{} {:.' + str(precision) + 'f}€ {}').format(sym, price, percentChangeInfo)) # Full Text
    print(('{} {:.' + str(precision) + 'f}€').format(sym, price)) # Short Text

if len(sys.argv) < 2:
    sys.exit("Error: need 1 parameter:   crypto bitcoin")

coin_name = sys.argv[1]

base_path = os.path.dirname(os.path.realpath(sys.argv[0]))

API_URL = 'https://api.coincap.io/v2/assets/' + coin_name

headers = {
    'Accepts': 'application/json',
}

# Get cryptocurrency price.
session = Session()
session.headers.update(headers)

r0 = session.get(API_URL)
data = json.loads(r0.text)
data = data['data']

# Get EUR-USD conversion from the ECB.
r1 = requests.get('http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml', stream=True)
r1.raw.decode_content = True
line = r1.text.splitlines()[8].strip()
st = line.index('\'', 23) + 1
ed = line.index('\'', st)
rate = float(line[st:ed])

print_currency(data, rate)
